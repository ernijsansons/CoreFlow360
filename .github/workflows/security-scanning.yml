name: Security Scanning

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  schedule:
    - cron: '0 2 * * 1'  # Weekly on Monday at 2 AM
  workflow_dispatch:

permissions:
  contents: read
  security-events: write
  pull-requests: write
  actions: read

env:
  NODE_VERSION: '20'

jobs:
  # Simplified dependency scanning - only what we need
  dependency-scanning:
    name: Dependency Vulnerability Scan
    runs-on: ubuntu-latest
    timeout-minutes: 10
    
    steps:
    - name: Checkout Code
      uses: actions/checkout@v4
        
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        
    - name: Install Dependencies
      run: npm ci --production=false
      
    - name: NPM Audit
      run: |
        npm audit --audit-level=high || true
        npm audit --json --audit-level=high > audit-results.json || true
      continue-on-error: true
        
    - name: Upload Dependency Scan Results
      uses: actions/upload-artifact@v4
      with:
        name: dependency-scan-results
        path: audit-results.json
        retention-days: 7
      if: always()

  # Basic secret scanning
  secret-scanning:
    name: Secret Detection
    runs-on: ubuntu-latest
    timeout-minutes: 5
    
    steps:
    - name: Checkout Code
      uses: actions/checkout@v4
        
    - name: GitLeaks Secret Scan
      uses: gitleaks/gitleaks-action@v2
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      continue-on-error: true

  # Code quality and security analysis
  code-quality:
    name: Code Quality & Security
    runs-on: ubuntu-latest
    timeout-minutes: 15
    
    steps:
    - name: Checkout Code
      uses: actions/checkout@v4
        
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        
    - name: Install Dependencies
      run: npm ci
      
    - name: ESLint Security Scan
      run: npx eslint . --ext .ts,.tsx,.js,.jsx --max-warnings 50 || true
      continue-on-error: true
          
    - name: TypeScript Check
      run: npx tsc --noEmit || true
      continue-on-error: true

  # Simple security summary
  security-summary:
    name: Security Summary
    runs-on: ubuntu-latest
    needs: [dependency-scanning, secret-scanning, code-quality]
    if: always()
    
    steps:
    - name: Summary
      run: |
        echo "## Security Scan Complete"
        echo "- Dependency Scan: ${{ needs.dependency-scanning.result }}"
        echo "- Secret Scan: ${{ needs.secret-scanning.result }}"
        echo "- Code Quality: ${{ needs.code-quality.result }}"
        echo ""
        echo "All scans completed. Check individual job logs for details."