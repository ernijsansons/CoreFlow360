version: '3.8'

services:
  # Redis Cluster Nodes (6 nodes: 3 masters, 3 replicas)
  redis-node-1:
    image: redis:7-alpine
    container_name: redis-node-1
    command: redis-server /usr/local/etc/redis/redis.conf
    ports:
      - "7001:7000"
      - "17001:17000"
    volumes:
      - ./redis-cluster.conf:/usr/local/etc/redis/redis.conf
      - redis-node-1-data:/data
    environment:
      - REDIS_PASSWORD=${REDIS_PASSWORD}
    networks:
      - redis-cluster-net
    healthcheck:
      test: ["CMD", "redis-cli", "-p", "7000", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5

  redis-node-2:
    image: redis:7-alpine
    container_name: redis-node-2
    command: redis-server /usr/local/etc/redis/redis.conf --port 7002
    ports:
      - "7002:7002"
      - "17002:17002"
    volumes:
      - ./redis-cluster.conf:/usr/local/etc/redis/redis.conf
      - redis-node-2-data:/data
    environment:
      - REDIS_PASSWORD=${REDIS_PASSWORD}
    networks:
      - redis-cluster-net
    healthcheck:
      test: ["CMD", "redis-cli", "-p", "7002", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5

  redis-node-3:
    image: redis:7-alpine
    container_name: redis-node-3
    command: redis-server /usr/local/etc/redis/redis.conf --port 7003
    ports:
      - "7003:7003"
      - "17003:17003"
    volumes:
      - ./redis-cluster.conf:/usr/local/etc/redis/redis.conf
      - redis-node-3-data:/data
    environment:
      - REDIS_PASSWORD=${REDIS_PASSWORD}
    networks:
      - redis-cluster-net
    healthcheck:
      test: ["CMD", "redis-cli", "-p", "7003", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5

  redis-node-4:
    image: redis:7-alpine
    container_name: redis-node-4
    command: redis-server /usr/local/etc/redis/redis.conf --port 7004
    ports:
      - "7004:7004"
      - "17004:17004"
    volumes:
      - ./redis-cluster.conf:/usr/local/etc/redis/redis.conf
      - redis-node-4-data:/data
    environment:
      - REDIS_PASSWORD=${REDIS_PASSWORD}
    networks:
      - redis-cluster-net
    healthcheck:
      test: ["CMD", "redis-cli", "-p", "7004", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5

  redis-node-5:
    image: redis:7-alpine
    container_name: redis-node-5
    command: redis-server /usr/local/etc/redis/redis.conf --port 7005
    ports:
      - "7005:7005"
      - "17005:17005"
    volumes:
      - ./redis-cluster.conf:/usr/local/etc/redis/redis.conf
      - redis-node-5-data:/data
    environment:
      - REDIS_PASSWORD=${REDIS_PASSWORD}
    networks:
      - redis-cluster-net
    healthcheck:
      test: ["CMD", "redis-cli", "-p", "7005", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5

  redis-node-6:
    image: redis:7-alpine
    container_name: redis-node-6
    command: redis-server /usr/local/etc/redis/redis.conf --port 7006
    ports:
      - "7006:7006"
      - "17006:17006"
    volumes:
      - ./redis-cluster.conf:/usr/local/etc/redis/redis.conf
      - redis-node-6-data:/data
    environment:
      - REDIS_PASSWORD=${REDIS_PASSWORD}
    networks:
      - redis-cluster-net
    healthcheck:
      test: ["CMD", "redis-cli", "-p", "7006", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5

  # Redis Cluster Initializer
  redis-cluster-init:
    image: redis:7-alpine
    container_name: redis-cluster-init
    depends_on:
      redis-node-1:
        condition: service_healthy
      redis-node-2:
        condition: service_healthy
      redis-node-3:
        condition: service_healthy
      redis-node-4:
        condition: service_healthy
      redis-node-5:
        condition: service_healthy
      redis-node-6:
        condition: service_healthy
    networks:
      - redis-cluster-net
    command: >
      sh -c "
        redis-cli -a ${REDIS_PASSWORD} --cluster create 
        redis-node-1:7000 
        redis-node-2:7002 
        redis-node-3:7003 
        redis-node-4:7004 
        redis-node-5:7005 
        redis-node-6:7006 
        --cluster-replicas 1 --cluster-yes
      "

  # Redis Commander for monitoring (development only)
  redis-commander:
    image: rediscommander/redis-commander:latest
    container_name: redis-commander
    environment:
      - REDIS_HOSTS=cluster:redis-node-1:7000,redis-node-2:7002,redis-node-3:7003,redis-node-4:7004,redis-node-5:7005,redis-node-6:7006
      - REDIS_PASSWORD=${REDIS_PASSWORD}
    ports:
      - "8081:8081"
    networks:
      - redis-cluster-net
    depends_on:
      - redis-node-1
      - redis-node-2
      - redis-node-3
      - redis-node-4
      - redis-node-5
      - redis-node-6

  # Redis Exporter for Prometheus monitoring
  redis-exporter:
    image: oliver006/redis_exporter
    container_name: redis-exporter
    environment:
      - REDIS_ADDR=redis://redis-node-1:7000
      - REDIS_PASSWORD=${REDIS_PASSWORD}
    ports:
      - "9121:9121"
    networks:
      - redis-cluster-net
    depends_on:
      - redis-node-1

networks:
  redis-cluster-net:
    driver: bridge
    ipam:
      config:
        - subnet: 172.28.0.0/16

volumes:
  redis-node-1-data:
  redis-node-2-data:
  redis-node-3-data:
  redis-node-4-data:
  redis-node-5-data:
  redis-node-6-data: