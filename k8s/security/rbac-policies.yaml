# CoreFlow360 RBAC Security Policies
# Comprehensive Role-Based Access Control for consciousness platform

# Consciousness Application Service Account
apiVersion: v1
kind: ServiceAccount
metadata:
  name: coreflow360-consciousness
  namespace: coreflow360
  labels:
    app: coreflow360
    component: consciousness
  annotations:
    eks.amazonaws.com/role-arn: arn:aws:iam::ACCOUNT_ID:role/coreflow360-consciousness-role
automountServiceAccountToken: true

---
# Monitoring Service Account
apiVersion: v1
kind: ServiceAccount
metadata:
  name: coreflow360-monitor
  namespace: coreflow360
  labels:
    app: coreflow360
    component: monitoring
automountServiceAccountToken: true

---
# Security Service Account
apiVersion: v1
kind: ServiceAccount
metadata:
  name: coreflow360-security
  namespace: coreflow360
  labels:
    app: coreflow360
    component: security
automountServiceAccountToken: true

---
# Consciousness Application Role
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  namespace: coreflow360
  name: consciousness-app-role
  labels:
    app: coreflow360
    component: consciousness
rules:
# ConfigMaps access for configuration
- apiGroups: [""]
  resources: ["configmaps"]
  verbs: ["get", "list", "watch"]
# Secrets access for credentials
- apiGroups: [""]
  resources: ["secrets"]
  verbs: ["get", "list", "watch"]
# Pods access for self-discovery
- apiGroups: [""]
  resources: ["pods"]
  verbs: ["get", "list", "watch"]
  resourceNames: [] # Restrict to own pod if needed
# Services access for service discovery
- apiGroups: [""]
  resources: ["services"]
  verbs: ["get", "list", "watch"]
# Events for application logging
- apiGroups: [""]
  resources: ["events"]
  verbs: ["create"]

---
# Monitoring Role - Cluster-wide read access
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: coreflow360-monitoring-role
  labels:
    app: coreflow360
    component: monitoring
rules:
# Nodes access for node metrics
- apiGroups: [""]
  resources: ["nodes", "nodes/proxy", "services", "endpoints", "pods"]
  verbs: ["get", "list", "watch"]
# Deployments and ReplicaSets for workload metrics
- apiGroups: ["apps"]
  resources: ["deployments", "replicasets", "daemonsets", "statefulsets"]
  verbs: ["get", "list", "watch"]
# Metrics access
- apiGroups: ["metrics.k8s.io"]
  resources: ["nodes", "pods"]
  verbs: ["get", "list"]
# Custom metrics
- apiGroups: ["custom.metrics.k8s.io"]
  resources: ["*"]
  verbs: ["get", "list"]
# Ingress for traffic metrics
- apiGroups: ["networking.k8s.io"]
  resources: ["ingresses"]
  verbs: ["get", "list", "watch"]

---
# Security Role - Limited security operations
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  namespace: coreflow360
  name: security-operations-role
  labels:
    app: coreflow360
    component: security
rules:
# Secrets management
- apiGroups: [""]
  resources: ["secrets"]
  verbs: ["get", "list", "watch", "create", "update", "patch"]
# ConfigMaps for security configuration
- apiGroups: [""]
  resources: ["configmaps"]
  verbs: ["get", "list", "watch", "create", "update", "patch"]
# Events for security logging
- apiGroups: [""]
  resources: ["events"]
  verbs: ["create", "get", "list", "watch"]
# Network policies management
- apiGroups: ["networking.k8s.io"]
  resources: ["networkpolicies"]
  verbs: ["get", "list", "watch", "create", "update", "patch"]

---
# Admin Role - Full namespace access (emergency use only)
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  namespace: coreflow360
  name: emergency-admin-role
  labels:
    app: coreflow360
    component: security
    emergency: "true"
rules:
- apiGroups: ["*"]
  resources: ["*"]
  verbs: ["*"]

---
# Read-Only Role for developers
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  namespace: coreflow360
  name: developer-readonly-role
  labels:
    app: coreflow360
    component: security
rules:
# Read-only access to most resources
- apiGroups: [""]
  resources: ["pods", "services", "configmaps", "events"]
  verbs: ["get", "list", "watch"]
- apiGroups: ["apps"]
  resources: ["deployments", "replicasets", "statefulsets"]
  verbs: ["get", "list", "watch"]
- apiGroups: ["networking.k8s.io"]
  resources: ["ingresses", "networkpolicies"]
  verbs: ["get", "list", "watch"]
# NO access to secrets
- apiGroups: [""]
  resources: ["secrets"]
  verbs: []

---
# Role Bindings
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: consciousness-app-binding
  namespace: coreflow360
  labels:
    app: coreflow360
    component: consciousness
subjects:
- kind: ServiceAccount
  name: coreflow360-consciousness
  namespace: coreflow360
roleRef:
  kind: Role
  name: consciousness-app-role
  apiGroup: rbac.authorization.k8s.io

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: monitoring-binding
  labels:
    app: coreflow360
    component: monitoring
subjects:
- kind: ServiceAccount
  name: coreflow360-monitor
  namespace: coreflow360
roleRef:
  kind: ClusterRole
  name: coreflow360-monitoring-role
  apiGroup: rbac.authorization.k8s.io

---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: security-operations-binding
  namespace: coreflow360
  labels:
    app: coreflow360
    component: security
subjects:
- kind: ServiceAccount
  name: coreflow360-security
  namespace: coreflow360
roleRef:
  kind: Role
  name: security-operations-role
  apiGroup: rbac.authorization.k8s.io

---
# External Secrets Operator RBAC
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: external-secrets-operator
  labels:
    app: coreflow360
    component: external-secrets
rules:
- apiGroups: [""]
  resources: ["secrets"]
  verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
- apiGroups: [""]
  resources: ["configmaps"]
  verbs: ["get", "list", "watch"]
- apiGroups: ["external-secrets.io"]
  resources: ["*"]
  verbs: ["*"]

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: external-secrets-operator-binding
  labels:
    app: coreflow360
    component: external-secrets
subjects:
- kind: ServiceAccount
  name: external-secrets-sa
  namespace: coreflow360
roleRef:
  kind: ClusterRole
  name: external-secrets-operator
  apiGroup: rbac.authorization.k8s.io

---
# Service Mesh RBAC
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: istio-consciousness-role
  labels:
    app: coreflow360
    component: service-mesh
rules:
- apiGroups: ["networking.istio.io"]
  resources: ["*"]
  verbs: ["get", "list", "watch"]
- apiGroups: ["security.istio.io"]
  resources: ["*"]
  verbs: ["get", "list", "watch"]
- apiGroups: ["telemetry.istio.io"]
  resources: ["*"]
  verbs: ["get", "list", "watch"]

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: istio-consciousness-binding
  labels:
    app: coreflow360
    component: service-mesh
subjects:
- kind: ServiceAccount
  name: coreflow360-consciousness
  namespace: coreflow360
roleRef:
  kind: ClusterRole
  name: istio-consciousness-role
  apiGroup: rbac.authorization.k8s.io

---
# Emergency break-glass role binding (disabled by default)
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: emergency-admin-binding
  namespace: coreflow360
  labels:
    app: coreflow360
    component: security
    emergency: "true"
  annotations:
    rbac.coreflow360.com/enabled: "false"
    rbac.coreflow360.com/emergency-contact: "security@coreflow360.com"
    rbac.coreflow360.com/expiry: "2024-01-01T00:00:00Z"
subjects:
- kind: User
  name: emergency-admin@coreflow360.com
  apiGroup: rbac.authorization.k8s.io
roleRef:
  kind: Role
  name: emergency-admin-role
  apiGroup: rbac.authorization.k8s.io

---
# Developer access (read-only)
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: developer-readonly-binding
  namespace: coreflow360
  labels:
    app: coreflow360
    component: security
subjects:
- kind: Group
  name: coreflow360:developers
  apiGroup: rbac.authorization.k8s.io
roleRef:
  kind: Role
  name: developer-readonly-role
  apiGroup: rbac.authorization.k8s.io

---
# Security team access
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: security-team-binding
  namespace: coreflow360
  labels:
    app: coreflow360
    component: security
subjects:
- kind: Group
  name: coreflow360:security-team
  apiGroup: rbac.authorization.k8s.io
roleRef:
  kind: Role
  name: security-operations-role
  apiGroup: rbac.authorization.k8s.io

---
# Audit Role for compliance
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: audit-readonly-role
  labels:
    app: coreflow360
    component: compliance
rules:
# Read-only access to all resources for auditing
- apiGroups: ["*"]
  resources: ["*"]
  verbs: ["get", "list", "watch"]
# NO write permissions for audit role
- apiGroups: [""]
  resources: ["secrets"]
  verbs: ["get", "list"]  # Limited secrets access
  resourceNames: []  # Can be restricted to specific secrets

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: audit-readonly-binding
  labels:
    app: coreflow360
    component: compliance
subjects:
- kind: Group
  name: coreflow360:auditors
  apiGroup: rbac.authorization.k8s.io
- kind: ServiceAccount
  name: audit-service
  namespace: compliance
roleRef:
  kind: ClusterRole
  name: audit-readonly-role
  apiGroup: rbac.authorization.k8s.io