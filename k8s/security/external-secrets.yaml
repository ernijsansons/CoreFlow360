# External Secrets Operator Configuration for CoreFlow360
apiVersion: external-secrets.io/v1beta1
kind: SecretStore
metadata:
  name: aws-secretsmanager-store
  namespace: coreflow360
  labels:
    app: coreflow360
    component: external-secrets
spec:
  provider:
    aws:
      service: SecretsManager
      region: us-west-2
      auth:
        jwt:
          serviceAccountRef:
            name: external-secrets-sa

---
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: coreflow360-aws-secrets
  namespace: coreflow360
  labels:
    app: coreflow360
    component: external-secrets
spec:
  refreshInterval: 15m
  secretStoreRef:
    name: aws-secretsmanager-store
    kind: SecretStore
  target:
    name: coreflow360-app-secrets
    creationPolicy: Owner
    template:
      engineVersion: v2
      data:
        database-url: "{{ .database_url }}"
        redis-url: "{{ .redis_url }}"
        openai-api-key: "{{ .openai_api_key }}"
        nextauth-secret: "{{ .nextauth_secret }}"
        stripe-secret-key: "{{ .stripe_secret_key }}"
        stripe-webhook-secret: "{{ .stripe_webhook_secret }}"
        jwt-secret: "{{ .jwt_secret }}"
        encryption-key: "{{ .encryption_key }}"
  data:
  - secretKey: database_url
    remoteRef:
      key: coreflow360/production/database-credentials
      property: url
  - secretKey: redis_url
    remoteRef:
      key: coreflow360/production/redis-credentials
      property: url
  - secretKey: openai_api_key
    remoteRef:
      key: coreflow360/production/openai
      property: api_key
  - secretKey: nextauth_secret
    remoteRef:
      key: coreflow360/production/nextauth
      property: secret
  - secretKey: stripe_secret_key
    remoteRef:
      key: coreflow360/production/stripe
      property: secret_key
  - secretKey: stripe_webhook_secret
    remoteRef:
      key: coreflow360/production/stripe
      property: webhook_secret
  - secretKey: jwt_secret
    remoteRef:
      key: coreflow360/production/jwt
      property: secret
  - secretKey: encryption_key
    remoteRef:
      key: coreflow360/production/encryption
      property: key

---
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: coreflow360-monitoring-aws-secrets
  namespace: coreflow360
  labels:
    app: coreflow360
    component: monitoring-secrets
spec:
  refreshInterval: 30m
  secretStoreRef:
    name: aws-secretsmanager-store
    kind: SecretStore
  target:
    name: coreflow360-monitoring-secrets
    creationPolicy: Owner
    template:
      engineVersion: v2
      data:
        grafana-admin-password: "{{ .grafana_password }}"
        postgres-exporter-dsn: "{{ .postgres_dsn }}"
        redis-password: "{{ .redis_password }}"
        prometheus-basic-auth: "{{ .prometheus_auth }}"
        alertmanager-webhook-url: "{{ .slack_webhook }}"
  data:
  - secretKey: grafana_password
    remoteRef:
      key: coreflow360/production/monitoring
      property: grafana_admin_password
  - secretKey: postgres_dsn
    remoteRef:
      key: coreflow360/production/monitoring
      property: postgres_exporter_dsn
  - secretKey: redis_password
    remoteRef:
      key: coreflow360/production/redis-credentials
      property: password
  - secretKey: prometheus_auth
    remoteRef:
      key: coreflow360/production/monitoring
      property: prometheus_basic_auth
  - secretKey: slack_webhook
    remoteRef:
      key: coreflow360/production/alerting
      property: slack_webhook_url

---
# ClusterSecretStore for cluster-wide secrets
apiVersion: external-secrets.io/v1beta1
kind: ClusterSecretStore
metadata:
  name: aws-cluster-secretsmanager-store
  labels:
    app: coreflow360
    component: external-secrets
spec:
  provider:
    aws:
      service: SecretsManager
      region: us-west-2
      auth:
        jwt:
          serviceAccountRef:
            name: external-secrets-sa
            namespace: coreflow360

---
# Certificate ExternalSecret
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: coreflow360-ssl-certificates
  namespace: coreflow360
  labels:
    app: coreflow360
    component: ssl-secrets
spec:
  refreshInterval: 1h
  secretStoreRef:
    name: aws-secretsmanager-store
    kind: SecretStore
  target:
    name: coreflow360-ssl-certs
    creationPolicy: Owner
    type: kubernetes.io/tls
    template:
      engineVersion: v2
      data:
        tls.crt: "{{ .ssl_cert | b64dec }}"
        tls.key: "{{ .ssl_key | b64dec }}"
  data:
  - secretKey: ssl_cert
    remoteRef:
      key: coreflow360/production/ssl-certificates
      property: certificate
  - secretKey: ssl_key
    remoteRef:
      key: coreflow360/production/ssl-certificates
      property: private_key

---
# Secret for image pull from private registry
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: coreflow360-registry-credentials
  namespace: coreflow360
  labels:
    app: coreflow360
    component: registry-secrets
spec:
  refreshInterval: 6h
  secretStoreRef:
    name: aws-secretsmanager-store
    kind: SecretStore
  target:
    name: coreflow360-registry-secret
    creationPolicy: Owner
    type: kubernetes.io/dockerconfigjson
    template:
      engineVersion: v2
      data:
        .dockerconfigjson: |
          {
            "auths": {
              "registry.coreflow360.com": {
                "username": "{{ .registry_username }}",
                "password": "{{ .registry_password }}",
                "auth": "{{ printf "%s:%s" .registry_username .registry_password | b64enc }}"
              }
            }
          }
  data:
  - secretKey: registry_username
    remoteRef:
      key: coreflow360/production/registry
      property: username
  - secretKey: registry_password
    remoteRef:
      key: coreflow360/production/registry
      property: password